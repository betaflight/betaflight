// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --------- //
// dshot_600 //
// --------- //

#define dshot_600_wrap_target 0
#define dshot_600_wrap 12
#define dshot_600_pio_version 0

static const uint16_t dshot_600_program_instructions[] = {
            //     .wrap_target
    0xff00, //  0: set    pins, 0                [31]
    0xb442, //  1: nop                           [20]
    0x80a0, //  2: pull   block
    0x6050, //  3: out    y, 16
    0x6041, //  4: out    y, 1
    0x006a, //  5: jmp    !y, 10
    0xfd01, //  6: set    pins, 1                [29]
    0xe600, //  7: set    pins, 0                [6]
    0x00e4, //  8: jmp    !osre, 4
    0x0000, //  9: jmp    0
    0xee01, // 10: set    pins, 1                [14]
    0xf400, // 11: set    pins, 0                [20]
    0x01e4, // 12: jmp    !osre, 4               [1]
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dshot_600_program = {
    .instructions = dshot_600_program_instructions,
    .length = 13,
    .origin = -1,
    .pio_version = dshot_600_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config dshot_600_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dshot_600_wrap_target, offset + dshot_600_wrap);
    return c;
}
#endif

// --------------------- //
// dshot_600_bidir_debug //
// --------------------- //

#define dshot_600_bidir_debug_wrap_target 0
#define dshot_600_bidir_debug_wrap 31
#define dshot_600_bidir_debug_pio_version 0

static const uint16_t dshot_600_bidir_debug_program_instructions[] = {
            //     .wrap_target
    0xe081, //  0: set    pindirs, 1      side 0
    0xef01, //  1: set    pins, 1         side 0 [15]
    0xaf42, //  2: nop                    side 0 [15]
    0xaf42, //  3: nop                    side 0 [15]
    0x90a0, //  4: pull   block           side 1
    0x6050, //  5: out    y, 16           side 0
    0x6041, //  6: out    y, 1            side 0
    0x006d, //  7: jmp    !y, 13          side 0
    0xef00, //  8: set    pins, 0         side 0 [15]
    0xad42, //  9: nop                    side 0 [13]
    0xe601, // 10: set    pins, 1         side 0 [6]
    0x00e6, // 11: jmp    !osre, 6        side 0
    0x0010, // 12: jmp    16              side 0
    0xee00, // 13: set    pins, 0         side 0 [14]
    0xef01, // 14: set    pins, 1         side 0 [15]
    0x06e6, // 15: jmp    !osre, 6        side 0 [6]
    0xe080, // 16: set    pindirs, 0      side 0
    0xe033, // 17: set    x, 19           side 0
    0xae42, // 18: nop                    side 0 [14]
    0x0e52, // 19: jmp    x--, 18         side 0 [14]
    0x3220, // 20: wait   0 pin, 0        side 1 [2]
    0xaf42, // 21: nop                    side 0 [15]
    0xef21, // 22: set    x, 1            side 0 [15]
    0xe149, // 23: set    y, 9            side 0 [1]
    0x001a, // 24: jmp    26              side 0
    0xa442, // 25: nop                    side 0 [4]
    0x5901, // 26: in     pins, 1         side 1 [9]
    0x4901, // 27: in     pins, 1         side 0 [9]
    0x5501, // 28: in     pins, 1         side 1 [5]
    0x0099, // 29: jmp    y--, 25         side 0
    0x8000, // 30: push   noblock         side 0
    0x0057, // 31: jmp    x--, 23         side 0
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dshot_600_bidir_debug_program = {
    .instructions = dshot_600_bidir_debug_program_instructions,
    .length = 32,
    .origin = -1,
    .pio_version = dshot_600_bidir_debug_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config dshot_600_bidir_debug_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dshot_600_bidir_debug_wrap_target, offset + dshot_600_bidir_debug_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}
#endif

// --------------- //
// dshot_600_bidir //
// --------------- //

#define dshot_600_bidir_wrap_target 0
#define dshot_600_bidir_wrap 29
#define dshot_600_bidir_pio_version 0

static const uint16_t dshot_600_bidir_program_instructions[] = {
            //     .wrap_target
    0xe081, //  0: set    pindirs, 1
    0xfe01, //  1: set    pins, 1                [30]
    0xb442, //  2: nop                           [20]
    0x80a0, //  3: pull   block
    0x6050, //  4: out    y, 16
    0x6041, //  5: out    y, 1
    0x006b, //  6: jmp    !y, 11
    0xfd00, //  7: set    pins, 0                [29]
    0xe601, //  8: set    pins, 1                [6]
    0x00e5, //  9: jmp    !osre, 5
    0x000f, // 10: jmp    15
    0xee00, // 11: set    pins, 0                [14]
    0xf401, // 12: set    pins, 1                [20]
    0x01e5, // 13: jmp    !osre, 5               [1]
    0xa042, // 14: nop
    0xe080, // 15: set    pindirs, 0
    0xe037, // 16: set    x, 23
    0x1851, // 17: jmp    x--, 17                [24]
    0x3f20, // 18: wait   0 pin, 0               [31]
    0xe221, // 19: set    x, 1                   [2]
    0xa042, // 20: nop
    0xe049, // 21: set    y, 9
    0x0018, // 22: jmp    24
    0xa442, // 23: nop                           [4]
    0x4901, // 24: in     pins, 1                [9]
    0x4901, // 25: in     pins, 1                [9]
    0x4501, // 26: in     pins, 1                [5]
    0x0097, // 27: jmp    y--, 23
    0x8000, // 28: push   noblock
    0x0054, // 29: jmp    x--, 20
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dshot_600_bidir_program = {
    .instructions = dshot_600_bidir_program_instructions,
    .length = 30,
    .origin = -1,
    .pio_version = dshot_600_bidir_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config dshot_600_bidir_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dshot_600_bidir_wrap_target, offset + dshot_600_bidir_wrap);
    return c;
}
#endif

